name: SQLMesh CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  sqlmesh:
    runs-on: self-hosted

    defaults:
      run:
        shell: bash
        working-directory: /mnt/c/Users/josh/analytics

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install SQLMesh with Postgres
        run: |
          pip install "sqlmesh[postgres]==0.209.0"
          # add any other dependencies here, e.g. dbt, bigquery, etc.

      - name: Set Postgres environment variables for SQLMesh
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: |
          export SQLMESH__POSTGRES__HOST=$POSTGRES_HOST
          export SQLMESH__POSTGRES__PORT=$POSTGRES_PORT
          export SQLMESH__POSTGRES__DBNAME=$POSTGRES_DB
          export SQLMESH__POSTGRES__USER=$POSTGRES_USER
          export SQLMESH__POSTGRES__PASSWORD=$POSTGRES_PASSWORD
          echo "✅ SQLMesh Postgres environment variables set"

      - name: Verify Postgres connectivity
        run: |
          python - <<EOF
          import psycopg2
          import os

          try:
              conn = psycopg2.connect(
                  host=os.environ["SQLMESH__POSTGRES__HOST"],
                  port=os.environ["SQLMESH__POSTGRES__PORT"],
                  dbname=os.environ["SQLMESH__POSTGRES__DBNAME"],
                  user=os.environ["SQLMESH__POSTGRES__USER"],
                  password=os.environ["SQLMESH__POSTGRES__PASSWORD"]
              )
              conn.close()
              print("✅ Postgres connection successful!")
          except Exception as e:
              print("❌ Postgres connection failed:", e)
              exit(1)
          EOF

      - name: Run SQLMesh Plan
        run: sqlmesh plan staging --no-prompts --skip-backfill --verbose

      - name: Run SQLMesh Tests
        run: sqlmesh test
